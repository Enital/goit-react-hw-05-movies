{"version":3,"file":"static/js/975.42de801d.chunk.js","mappings":"+PACA,EAA2B,uBAA3B,EAA6D,uBAA7D,EAAgG,wB,SCMjF,SAASA,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE2BC,EAAAA,EAAAA,IAAeR,GAF1C,OAEcS,EAFd,OAGQL,EAAQK,GAHhB,gDAKQC,QAAQC,IAAR,MALR,yBAOQL,GAAa,GAPrB,6EADY,uBAAC,WAAD,wBAYZM,EACH,GAAE,CAACZ,KAGA,iCACI,eAAIa,UAAWC,EAAf,SACKX,EAAKY,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACjC,OACI,gBAAaN,UAAWC,EAAxB,WACI,gBACIM,MAAM,QACNC,OAAO,QACPC,IAAG,8CAAyCJ,GAC5CK,IAAKN,KAET,iBAAMJ,UAAWC,EAAjB,SAAiCG,KACjC,uBAAIE,MARCH,EAWhB,MAEJX,IAAa,SAACmB,EAAA,EAAD,MAGzB,C,+LC9CKC,EAAW,gCAEXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAmB,mCAAG,sGACVC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,qCAErBC,GAH+B,uBACzBjB,EADyB,EACzBA,KADyB,kBAK1BA,EAAKwB,SALqB,2CAAH,qDAQnBC,EAAa,mCAAG,WAAMlC,GAAN,yFACJgC,EAAAA,EAAAA,IAAA,UAAaP,EAAb,iBAA8BzB,GAAW0B,GADrC,uBACnBjB,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKb0B,EAAgB,mCAAG,WAAMC,GAAN,yFACPJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,8BACYW,EADZ,WAErBV,GAH4B,uBACtBjB,EADsB,EACtBA,KADsB,kBAKvBA,EAAKwB,SALkB,2CAAH,sDAQhBzB,EAAc,mCAAG,WAAMR,GAAN,yFACLgC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDzB,EADC,YAErB0B,GAH0B,uBACpBjB,EADoB,EACpBA,KADoB,kBAKrBA,EAAKN,MALgB,2CAAH,sDAQdkC,EAAiB,mCAAG,WAAMrC,GAAN,yFACRgC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDzB,EADC,YAErB0B,GAH6B,uBACvBjB,EADuB,EACvBA,KADuB,kBAKxBA,EAAKwB,SALmB,2CAAH,qD,mECzC9B,EAAyB,uB,SCmBzB,MAhBA,WACE,OACE,gBAAKpB,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEwB,SAAS,EACTjB,OAAO,MACPD,MAAM,MACNmB,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,aAI5D,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Casts/cast.module.css?5ec4","components/Casts/Casts.jsx","components/Functions/MoviesApi.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/loader.module.css?1600","components/Loader/Loader.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"cast_castList__tbRfz\",\"castItem\":\"cast_castItem__Aj7Vh\",\"actorName\":\"cast_actorName__GDr26\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../../components/Functions/MoviesApi';\nimport Loader from 'components/Loader/Loader';\n\nimport css from './cast.module.css'\n\nexport default function Cast() {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        async function getCast() {\n            try {\n                const data = await fetchMovieCast(movieId);\n                setCast(data);\n            } catch (error) {\n                console.log(error);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n\n        getCast()\n    }, [movieId]);\n\n    return (\n        <>\n            <ul className={css.castList}>\n                {cast.map(({ id, name, profile_path, character }) => {\n                    return (\n                        <li key={id} className={css.castItem}>\n                            <img\n                                width=\"100px\"\n                                height=\"150px\"\n                                src={`https://image.tmdb.org/t/p/original/${profile_path}`}\n                                alt={name}\n                            />\n                            <span className={css.actorName}>{name}</span>\n                            <p>{character}</p>\n                        </li>\n                    );\n                })}\n            </ul>\n            {isLoading && <Loader />}\n        </>\n    );\n}","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNmU0MGUwOWI3NDZlZTI2MWY4MmY5MTliZWI5MjgwOCIsInN1YiI6IjY0OGFjMDczMjYzNDYyMDBlYjc0NWJkNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nrZ244O_eY9vRaeacdayZYNOixh-XOkGIuO3mgMPuaw',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n    );\n  return data.results;\n};\n\nexport const fetchMoviesId = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}`, options);\n  return data;\n};\n\nexport const fetchMovieSearch = async queryName => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?query=${queryName}&page=1`,\n    options\n  );\n  return data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n    );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  return data.results;\n};","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"loader_loader__1AOoV\"};","import { Vortex } from 'react-loader-spinner';\n\nimport css from './loader.module.css';\n\nfunction Loader() {\n  return (\n    <div className={css.loader}>\n      <Vortex\n        visible={true}\n        height=\"120\"\n        width=\"120\"\n        ariaLabel=\"vortex-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"vortex-wrapper\"\n        colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n      />\n    </div>\n  );\n}\n\nexport default Loader;"],"names":["Cast","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","useEffect","fetchMovieCast","data","console","log","getCast","className","css","map","id","name","profile_path","character","width","height","src","alt","Loader","BASE_URL","options","method","headers","accept","Authorization","fetchTrendingMovies","axios","results","fetchMoviesId","fetchMovieSearch","queryName","fetchMovieReviews","visible","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}