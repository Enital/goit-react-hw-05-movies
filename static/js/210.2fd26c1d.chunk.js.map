{"version":3,"file":"static/js/210.2fd26c1d.chunk.js","mappings":"uQAyBA,EAvBmB,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAE1B,OACI,8BACuB,IAAlBD,EAAOE,SACJ,wBACKF,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACf,OACI,2BACI,qBAEA,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAACC,KAAMP,GAAzC,SACKI,MAJAD,EAQhB,OAKpB,E,kBCtBD,EAA4B,yBCgE5B,MAxDA,WACI,OAAkCK,EAAAA,EAAAA,IAAgB,CAAC,GAAnD,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAQP,EAAUQ,IAAI,UAC5B,GAAsCN,EAAAA,EAAAA,UAASK,GAAgB,IAA/D,eAAOE,EAAP,KAAoBC,EAApB,KAEMC,GAAWC,EAAAA,EAAAA,MARH,wCAed,WAA4BC,GAA5B,iEACIA,EAAEC,iBACFb,EAAoC,KAAvBQ,EAAYM,OAAgB,CAAEC,OAAQP,GAAgB,CAAC,GAGzC,KAAvBA,EAAYM,SACZE,EAAAA,OAAAA,QAAe,sCACfX,EAAc,KAPtB,4CAfc,sBAyCd,OAfAY,EAAAA,EAAAA,YAAU,WAAM,wCACZ,gGAEaX,EAFb,kEAG2BY,EAAAA,EAAAA,IAAiBZ,GAH5C,OAGca,EAHd,OAIQd,EAAcc,GAEM,IAAhBA,EAAK5B,QAAcyB,EAAAA,OAAAA,QAAe,+BAN9C,uBAQQb,GAAa,GARrB,0EADY,uBAAC,WAAD,wBAYZiB,EACH,GAAE,CAACd,KAGA,iCACI,kBAAMe,SA3CA,4CA2CwBC,UAAWC,EAAzC,WACI,kBAAOC,KAAK,OAAOC,MAAOjB,EAAakB,SAjCnD,SAAuBd,GACnBH,EAAeG,EAAEe,OAAOF,MAC3B,KAgCW,mBAAQD,KAAK,SAAb,SAAsB,eAK1B,SAAC,EAAD,CAAYnC,OAAQe,EAAYd,SAAWoB,IAC1CR,IAAa,SAAC0B,EAAA,EAAD,MAGzB,C,+LC7DKC,EAAW,gCAEXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAmB,mCAAG,sGACVC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,qCAErBC,GAH+B,uBACzBX,EADyB,EACzBA,KADyB,kBAK1BA,EAAKkB,SALqB,2CAAH,qDAQnBC,EAAa,mCAAG,WAAMC,GAAN,yFACJH,EAAAA,EAAAA,IAAA,UAAaP,EAAb,iBAA8BU,GAAWT,GADrC,uBACnBX,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbD,EAAgB,mCAAG,WAAMsB,GAAN,yFACPJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,8BACYW,EADZ,WAErBV,GAH4B,uBACtBX,EADsB,EACtBA,KADsB,kBAKvBA,EAAKkB,SALkB,2CAAH,sDAQhBI,EAAc,mCAAG,WAAMF,GAAN,yFACLH,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDU,EADC,YAErBT,GAH0B,uBACpBX,EADoB,EACpBA,KADoB,kBAKrBA,EAAKuB,MALgB,2CAAH,sDAQdC,EAAiB,mCAAG,WAAMJ,GAAN,yFACRH,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDU,EADC,YAErBT,GAH6B,uBACvBX,EADuB,EACvBA,KADuB,kBAKxBA,EAAKkB,SALmB,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/Pages/Movies/movie.module.css?c7f3","Pages/Movies/Movies.jsx","components/Functions/MoviesApi.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nconst MoviesList = ({ movies, backPage }) => {\n\n    return (\n        <>\n            {movies.length !== 0 && (\n                <ul>\n                    {movies.map(({ id, title }) => {\n                        return (\n                            <li key={id}>\n                                <span >\n                                </span>\n                                <Link to={`/movies/${id}`} state={{from: backPage}}>\n                                    {title}\n                                </Link>\n                            </li>\n                        );\n                    })}\n                </ul>\n            )}\n        </>\n    );\n};\n\nexport default MoviesList;","// extracted by mini-css-extract-plugin\nexport default {\"formMovie\":\"movie_formMovie__M5VEx\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchMovieSearch } from '../../components/Functions/MoviesApi';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Notify } from 'notiflix';\nimport Loader from 'components/Loader/Loader';\n\nimport css from './movie.module.css'\n\nfunction Movies() {\n    const [urlParams, setUrlParams] = useSearchParams({});\n    const [isLoading, setIsLoading] = useState(true);\n    \n    const [moviesList, setMoviesList] = useState([]);\n    const query = urlParams.get('search');\n    const [queryString, setQueryString] = useState(query ? query : '');\n\n    const location = useLocation();\n    \n\n    function onInputChange(e) {\n        setQueryString(e.target.value);\n    }\n\n    async function onFormSubmit(e) {\n        e.preventDefault();\n        setUrlParams(queryString.trim() !== '' ? { search: queryString } : {});\n\n\n        if (queryString.trim() === '') {\n            Notify.warning('Please enter movie title to search');\n            setMoviesList([]);\n        }\n    }\n\n    useEffect(() => {\n        async function getData() {\n            try {\n                if (!query) return;\n                const data = await fetchMovieSearch(query);\n                setMoviesList(data);\n\n                if (data.length === 0) Notify.failure('Sorry, this movie not found');\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        getData();\n    }, [query]);\n\n    return (\n        <>\n            <form onSubmit={onFormSubmit} className={css.formMovie}>\n                <input type='text' value={queryString} onChange={onInputChange} />\n                <button type='submit'>\n                    Search\n                </button>\n            </form>\n\n            <MoviesList movies={moviesList} backPage={ location} />\n            {isLoading && <Loader />}\n        </>\n    );\n}\n\nexport default Movies;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNmU0MGUwOWI3NDZlZTI2MWY4MmY5MTliZWI5MjgwOCIsInN1YiI6IjY0OGFjMDczMjYzNDYyMDBlYjc0NWJkNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nrZ244O_eY9vRaeacdayZYNOixh-XOkGIuO3mgMPuaw',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n    );\n  return data.results;\n};\n\nexport const fetchMoviesId = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}`, options);\n  return data;\n};\n\nexport const fetchMovieSearch = async queryName => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?query=${queryName}&page=1`,\n    options\n  );\n  return data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n    );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  return data.results;\n};"],"names":["movies","backPage","length","map","id","title","to","state","from","useSearchParams","urlParams","setUrlParams","useState","isLoading","setIsLoading","moviesList","setMoviesList","query","get","queryString","setQueryString","location","useLocation","e","preventDefault","trim","search","Notify","useEffect","fetchMovieSearch","data","getData","onSubmit","className","css","type","value","onChange","target","Loader","BASE_URL","options","method","headers","accept","Authorization","fetchTrendingMovies","axios","results","fetchMoviesId","movieId","queryName","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}