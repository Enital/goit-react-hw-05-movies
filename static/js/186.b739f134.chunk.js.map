{"version":3,"file":"static/js/186.b739f134.chunk.js","mappings":"+SAEMA,EAAW,gCAEXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAmB,mCAAG,sGACVC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,qCAErBC,GAH+B,uBACzBO,EADyB,EACzBA,KADyB,kBAK1BA,EAAKC,SALqB,2CAAH,qDAQnBC,EAAa,mCAAG,WAAMC,GAAN,yFACJJ,EAAAA,EAAAA,IAAA,UAAaP,EAAb,iBAA8BW,GAAWV,GADrC,uBACnBO,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbI,EAAgB,mCAAG,WAAMC,GAAN,yFACPN,EAAAA,EAAAA,IAAA,UAClBP,EADkB,8BACYa,EADZ,WAErBZ,GAH4B,uBACtBO,EADsB,EACtBA,KADsB,kBAKvBA,EAAKC,SALkB,2CAAH,sDAQhBK,EAAc,mCAAG,WAAMH,GAAN,yFACLJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDW,EADC,YAErBV,GAH0B,uBACpBO,EADoB,EACpBA,KADoB,kBAKrBA,EAAKO,MALgB,2CAAH,sDAQdC,EAAiB,mCAAG,WAAML,GAAN,yFACRJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDW,EADC,YAErBV,GAH6B,uBACvBO,EADuB,EACvBA,KADuB,kBAKxBA,EAAKC,SALmB,2CAAH,qD,wJCrCf,SAASQ,IACpB,IAAQN,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE2BR,EAAAA,EAAAA,IAAkBL,GAF7C,OAEcH,EAFd,OAGQa,EAAWb,GAHnB,gDAKQiB,QAAQC,IAAR,MALR,yBAOQH,GAAa,GAPrB,6EADY,uBAAC,WAAD,wBAYZI,EACH,GAAE,CAAChB,KAGA,gCACKS,EAAQQ,OAAS,GACd,wBACKR,EAAQS,KAAI,SAAAC,GACT,OACI,2BACI,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFNF,EAAOG,GAKvB,OAEJ,uBAAG,6CAEPX,IAAa,SAAC,IAAD,MAGzB,C","sources":["components/Functions/MoviesApi.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNmU0MGUwOWI3NDZlZTI2MWY4MmY5MTliZWI5MjgwOCIsInN1YiI6IjY0OGFjMDczMjYzNDYyMDBlYjc0NWJkNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nrZ244O_eY9vRaeacdayZYNOixh-XOkGIuO3mgMPuaw',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n    );\n  return data.results;\n};\n\nexport const fetchMoviesId = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}`, options);\n  return data;\n};\n\nexport const fetchMovieSearch = async queryName => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?query=${queryName}&page=1`,\n    options\n  );\n  return data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n    );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  return data.results;\n};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'components/Functions/MoviesApi';\nimport Loader from 'components/Loader/Loader';\n\nexport default function Reviews() {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState('');\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        async function getData() {\n            try {\n                const data = await fetchMovieReviews(movieId);\n                setReviews(data);\n            } catch (error) {\n                console.log(error);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n\n        getData();\n    }, [movieId]);\n\n    return (\n        <>\n            {reviews.length > 0 ? (\n                <ul>\n                    {reviews.map(review => {\n                        return (\n                            <li key={review.id}>\n                                <h3>{review.author}</h3>\n                                <p>{review.content}</p>\n                            </li>\n                        );\n                    })}\n                </ul>\n            ) : (<p>We don't have any reviews for this movie</p>)}\n            \n            {isLoading && <Loader />}\n        </>\n    )\n};"],"names":["BASE_URL","options","method","headers","accept","Authorization","fetchTrendingMovies","axios","data","results","fetchMoviesId","movieId","fetchMovieSearch","queryName","fetchMovieCast","cast","fetchMovieReviews","Reviews","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","console","log","getData","length","map","review","author","content","id"],"sourceRoot":""}